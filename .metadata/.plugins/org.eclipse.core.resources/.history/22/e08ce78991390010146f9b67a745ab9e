package org.ms.reglementservice.web;

import lombok.RequiredArgsConstructor;
import org.ms.reglementservice.entities.Reglement;
import org.ms.reglementservice.repository.ReglementRepository;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/reglements")
@RequiredArgsConstructor
public class ReglementRestController {

    private final ReglementRepository reglementRepository;

    // Récupérer tous les règlements
    @GetMapping
    public List<Reglement> getAllReglements() {
        return reglementRepository.findAll();
    }

    // Récupérer un règlement par ID
    @GetMapping("/{id}")
    public Reglement getReglementById(@PathVariable Long id) {
        return reglementRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Règlement non trouvé avec id " + id));
    }

    // Récupérer les règlements par clientId
    @GetMapping("/byClient/{clientId}")
    public List<Reglement> getReglementsByClientId(@PathVariable Long clientId) {
        return reglementRepository.findByClientId(clientId);
    }

    // Récupérer les règlements par factureId
    @GetMapping("/byFacture/{factureId}")
    public List<Reglement> getReglementsByFactureId(@PathVariable Long factureId) {
        return reglementRepository.findByFactureId(factureId);
    }

    // Créer un nouveau règlement
    @PostMapping
    public Reglement createReglement(@RequestBody Reglement reglement) {
        return reglementRepository.save(reglement);
    }

    // Mettre à jour un règlement existant
    @PutMapping("/{id}")
    public Reglement updateReglement(@PathVariable Long id, @RequestBody Reglement reglementRequest) {
        Reglement reglement = reglementRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Règlement non trouvé avec id " + id));
        reglement.setMontant(reglementRequest.getMontant());
        reglement.setDatePaiement(reglementRequest.getDatePaiement());
        reglement.setClientId(reglementRequest.getClientId());
        reglement.setFactureId(reglementRequest.getFactureId());
        return reglementRepository.save(reglement);
    }

    // Supprimer un règlement
    @DeleteMapping("/{id}")
    public void deleteReglement(@PathVariable Long id) {
        reglementRepository.deleteById(id);
    }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.109
 * Generated at: 2025-03-30 05:06:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import iset.master.spring.model.*;

public final class formProduit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    Produit produit = (Produit) request.getAttribute("produit"); // Récupérer le produit s'il existe

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>");
      out.print( (produit != null && produit.getId() != null) ? "Modifier Produit" : "Ajouter Produit" );
      out.write("</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <h2>");
      out.print( (produit != null && produit.getId() != null) ? "Modifier le Produit" : "Ajouter un Nouveau Produit" );
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"saveProduit\" method=\"post\">\r\n");
      out.write("        ");
 if (produit != null && produit.getId() != null) { 
      out.write("\r\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( produit.getId() );
      out.write("\">\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <label for=\"designation\">Désignation :</label>\r\n");
      out.write("        <input type=\"text\" name=\"designation\" id=\"designation\" value=\"");
      out.print( (produit != null) ? produit.getDesignation() : "" );
      out.write("\" required>\r\n");
      out.write("        <br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"prix\">Prix :</label>\r\n");
      out.write("        <input type=\"number\" step=\"0.01\" name=\"prix\" id=\"prix\" value=\"");
      out.print( (produit != null) ? produit.getPrix() : "" );
      out.write("\" required>\r\n");
      out.write("        <br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"quantite\">Quantité :</label>\r\n");
      out.write("        <input type=\"number\" name=\"quantite\" id=\"quantite\" value=\"");
      out.print( (produit != null) ? produit.getQuantite() : "" );
      out.write("\" required>\r\n");
      out.write("        <br><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"dateAchat\">Date d'Achat :</label>\r\n");
      out.write("        <input type=\"date\" name=\"dateAchat\" id=\"dateAchat\" value=\"");
      out.print( (produit != null && produit.getDateAchat() != null) ? produit.getDateAchat().toString() : "" );
      out.write("\">\r\n");
      out.write("        <br><br>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\">Enregistrer</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    <br>\r\n");
      out.write("    <a href=\"listProduits.jsp\">Retour à la liste des produits</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
